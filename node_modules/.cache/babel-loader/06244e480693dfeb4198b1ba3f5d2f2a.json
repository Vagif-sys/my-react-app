{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nvar logIn = function logIn(user) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(user.inputEmail, user.inputPassword).then(function () {\n      return dispatch({\n        type: \"LOGIN_SUCCESS\"\n      });\n    }).catch(function (error) {\n      return dispatch({\n        type: \"LOGIN_ERROR\",\n        error: error\n      });\n    });\n  };\n};\n\nvar logOut = function logOut() {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signOut().then(function () {\n      dispatch({\n        type: \"LOGOUT_SUCCESS\"\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: \"LOGOUT_ERROR\"\n      }, error);\n    });\n  };\n};\n\nvar register = function register(user) {\n  return function (dispatch, getState, _ref3) {\n    var getFirebase = _ref3.getFirebase;\n    var db = firebase.database();\n    var firebase1 = getFirebase();\n    firebase1.auth().createUserWithEmailAndPassword(user.inputEmail, user.inputPassword).then(function (cred) {\n      dispatch({\n        type: \"REGISTER_SUCCESS\"\n      });\n      db.ref(\"users/\".concat(cred.user.uid)).set({\n        name: user.displayName,\n        lastname: user.displayLastName\n      });\n      console.log(\"user.uid:\", cred.user.uid); // I added user\n    }).catch(function (error) {\n      return dispatch({\n        type: \"REGISTER_ERROR\",\n        error: error\n      });\n    });\n  };\n};\n\nexport var authActions = {\n  logIn: logIn,\n  logOut: logOut,\n  register: register\n};","map":{"version":3,"sources":["C:/Users/Vagif/Desktop/chia.az23/src/store/actions/auth.actions.js"],"names":["firebase","logIn","user","dispatch","getState","getFirebase","auth","signInWithEmailAndPassword","inputEmail","inputPassword","then","type","catch","error","logOut","signOut","register","db","database","firebase1","createUserWithEmailAndPassword","cred","ref","uid","set","name","displayName","lastname","displayLastName","console","log","authActions"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,mBAAP;AACA,OAAO,eAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAU;AACtB,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAyC;AAAA,QAAlBC,WAAkB,QAAlBA,WAAkB;AAC9C,QAAML,QAAQ,GAAGK,WAAW,EAA5B;AACAL,IAAAA,QAAQ,CACLM,IADH,GAEGC,0BAFH,CAE8BL,IAAI,CAACM,UAFnC,EAE+CN,IAAI,CAACO,aAFpD,EAGGC,IAHH,CAGQ;AAAA,aAAMP,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA,KAHR,EAIGC,KAJH,CAIS,UAACC,KAAD;AAAA,aAAWV,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA,KAAK,EAALA;AAAvB,OAAD,CAAnB;AAAA,KAJT;AAKD,GAPD;AAQD,CATD;;AAWA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,SAAO,UAACX,QAAD,EAAWC,QAAX,SAAyC;AAAA,QAAlBC,WAAkB,SAAlBA,WAAkB;AAC9C,QAAML,QAAQ,GAAGK,WAAW,EAA5B;AACAL,IAAAA,QAAQ,CACLM,IADH,GAEGS,OAFH,GAGGL,IAHH,CAGQ,YAAM;AACVP,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KALH,EAMGC,KANH,CAMS,UAACC,KAAD,EAAW;AAChBV,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAD,EAA2BE,KAA3B,CAAR;AACD,KARH;AASD,GAXD;AAYD,CAbD;;AAeA,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACd,IAAD,EAAU;AACzB,SAAO,UAACC,QAAD,EAAWC,QAAX,SAAyC;AAAA,QAAlBC,WAAkB,SAAlBA,WAAkB;AAC9C,QAAMY,EAAE,GAAGjB,QAAQ,CAACkB,QAAT,EAAX;AACA,QAAMC,SAAS,GAAGd,WAAW,EAA7B;AACAc,IAAAA,SAAS,CACNb,IADH,GAEGc,8BAFH,CAEkClB,IAAI,CAACM,UAFvC,EAEmDN,IAAI,CAACO,aAFxD,EAGGC,IAHH,CAGQ,UAACW,IAAD,EAAU;AACdlB,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAM,MAAAA,EAAE,CAACK,GAAH,iBAAgBD,IAAI,CAACnB,IAAL,CAAUqB,GAA1B,GAAiCC,GAAjC,CAAqC;AACnCC,QAAAA,IAAI,EAAEvB,IAAI,CAACwB,WADwB;AAEnCC,QAAAA,QAAQ,EAAEzB,IAAI,CAAC0B;AAFoB,OAArC;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBT,IAAI,CAACnB,IAAL,CAAUqB,GAAnC,EANc,CAM2B;AAC1C,KAVH,EAWGX,KAXH,CAWS,UAACC,KAAD;AAAA,aAAWV,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,gBAAR;AAA0BE,QAAAA,KAAK,EAALA;AAA1B,OAAD,CAAnB;AAAA,KAXT;AAYD,GAfD;AAgBD,CAjBD;;AAmBA,OAAO,IAAMkB,WAAW,GAAG;AACzB9B,EAAAA,KAAK,EAALA,KADyB;AAEzBa,EAAAA,MAAM,EAANA,MAFyB;AAGzBE,EAAAA,QAAQ,EAARA;AAHyB,CAApB","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nconst logIn = (user) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(user.inputEmail, user.inputPassword)\r\n      .then(() => dispatch({ type: \"LOGIN_SUCCESS\" }))\r\n      .catch((error) => dispatch({ type: \"LOGIN_ERROR\", error }));\r\n  };\r\n};\r\n\r\nconst logOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: \"LOGOUT_ERROR\" }, error);\r\n      });\r\n  };\r\n};\r\n\r\nconst register = (user) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const db = firebase.database();\r\n    const firebase1 = getFirebase();\r\n    firebase1\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.inputEmail, user.inputPassword)\r\n      .then((cred) => {\r\n        dispatch({ type: \"REGISTER_SUCCESS\" });\r\n        db.ref(`users/${cred.user.uid}`).set({\r\n          name: user.displayName,\r\n          lastname: user.displayLastName\r\n        });\r\n        console.log(\"user.uid:\", cred.user.uid); // I added user\r\n      })\r\n      .catch((error) => dispatch({ type: \"REGISTER_ERROR\", error }));\r\n  };\r\n};\r\n\r\nexport const authActions = {\r\n  logIn,\r\n  logOut,\r\n  register\r\n};\r\n"]},"metadata":{},"sourceType":"module"}